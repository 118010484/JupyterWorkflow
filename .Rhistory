print("Testing 1")
data("AirPassengers")
AP <- AirPassengers
str(AP)
data("AirPassengers")
AP <- AirPassengers
str(AP) # Time series with 144 values from years 1949 to 1961
# number of passenger in each month in each year = 112 118 129 ...
head(AP)
ts(AP, frequency=12, start=c(1494,1)) # because we have monthly data from 1494 from January
attributes(AP)
plot(AP)
AP <- log(AP)
plot(AP)
decomp <- decompose(AP)
decomp$figure
plot(decomp$figure,
type="b",
xlab='Month',
ylab="Seasonality Index",
col="blue",
las = 2) # make the numbers appear vertical
plot(decomp)
data("AirPassengers")
AP <- AirPassengers
str(AP) # Time series with 144 values from years 1949 to 1961
# number of passenger in each month in each year = 112 118 129 ...
ts(AP, frequency=12, start=c(1494,1)) # because we have monthly data from 1494 from January
attributes(AP) # in a year we have 12 data points from year 1949 to 1960 something month
plot(AP)
AP <- log(AP)
plot(AP)
decomp <- decompose(AP)
decomp$figure
plot(decomp$figure,
type="b",
xlab='Month',
ylab="Seasonality Index",
col="blue",
las = 2) # make the numbers appear vertical
plot(decomp)
library(forecast)
install.packages("forecast")
library(forecast)
# find BEST arima model based on AIC or BIC value
model <- auto.arima(AP)
#install.packages("forecast")
library(forecast)
# find BEST arima model based on AIC or BIC value
model <- auto.arima(AP)
model
attributes(model)
model$coef
acf(model$residuals, main="Correlogram")
pacf(model$residuals, main="Partial Correlogram")
Box.test(model$residuals, lag=20, type='Ljung-Box)
Box.test(model$residuals, lag=20, type='Ljung-Box)
Box.test(model$residuals, lag=20, type='Ljung-Box')
hist(model$residuals,
col="red",
xlab="Error",
main = "Histogram of Residuals",
freq = FALSE)
# It should be like normal distribution which is what we want
lines(density(model$residuals))
hist(model$residuals,
col="red",
xlab="Error",
main = "Histogram of Residuals",
freq = FALSE)
# It should be like normal distribution which is what we want
lines(density(model$residuals))
f <- forecast(model, 48) # let's do forecasting for the next 48 months
library(ggplot2)
autoplot(f)
f <- forecast(model, 48) # let's do forecasting for the next 48 months
library(ggplot2)
autoplot(f)
accuracy(f)
